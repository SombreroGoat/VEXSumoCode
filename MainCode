#pragma config(Sensor, in1,    CENTER,         sensorLineFollower)
#pragma config(Sensor, in2,    LEFT,           sensorLineFollower)
#pragma config(Sensor, in3,    RIGHT,          sensorLineFollower)
#pragma config(Sensor, in5,    BACK,           sensorLineFollower)
#pragma config(Sensor, dgtl1,  stalin,         sensorTouch)
#pragma config(Sensor, dgtl3,  Rasputin,       sensorSONAR_inch)
#pragma config(Motor,  port3,           insideLM,      tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,           insideRM,      tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port5,           outsideLM,     tmotorVex393_MC29, openLoop, reversed)
#pragma config(Motor,  port6,           outsideRM,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port8,           frontM,        tmotorVex393_MC29, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*    MOTORS & SENSORS:                                                                               *|
|*    [I/O Port]          [Name]              [Type]                [Description]                     *|
|*    Motor  - Port 3     insideLM            393                   Left inside motor                 *|
|*    Motor  - Port 4     insideRM            393                   Right inside motor                *|
|*    Motor  - Port 5     outsideLM           393                   Left outside motor                *|
|*    Motor  - Port 6     outsideRM           393                   Right outside motor               *|
|*    Motor  - Port 8     frontM              393                   Front Pivot Motor                 *|
|*    Analog - Port 1     lineFollowerRIGHT   393                   Front-right, facing down          *|
|*    Analog - Port 2     lineFollowerCENTER  VEX Light Sensor      Front-center, facing down         *|
|*    Analog - Port 3     lineFollowerLEFT    VEX Light Sensor      Front-left, facing down           *|
\*----------------------------------------------------------------------------------------------------*/


//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++\\

  task main ()
{

	untilTouch(stalin);

	  int threshold = ;
	  
	  while(true) {
	  	//go forwards code
  	while(true) {
		motor(insideLM) = 127; // Move forward at speed 127.
		motor(outsideLM) = 127;
		motor(insideRM) = 127;
		motor(outsideRM) = 127;
		motor(frontM) = 127;
}

   // CENTER sensor sees dark:
    if(SensorValue(CENTER) > threshold)
    {
      // counter-move forwards
      motor[frontM]  = -50;
      motor[insideLM]  = -50;
      motor[insideRM]  = -50;
      motor[outsideLM]  = -50; //working
      motor[outsideRM] = -50;
    }

    // LEFT sensor sees dark:
    if(SensorValue(LEFT) > threshold)	{
      // counter-steer to the right:
      motor[frontM]  = 0;
      motor[insideLM]  = 50;
      motor[insideRM] = -50;
      motor[outsideLM]  = 50;
      motor[outsideRM] = -50;
    }
    // RIGHT sensor sees dark:
    if(SensorValue(RIGHT) > threshold)	{
      // counter-steer to the left:
      motor[frontM]  = 0;
      motor[insideLM]  = -50;
      motor[insideRM]  = 50;
      motor[outsideLM]  = -50;
      motor[outsideRM] = 50;
    }
          // RIGHT sensor sees dark:
    if(SensorValue(BACK) > threshold)	{
      // counter-move forwards:
      motor[frontM]  = 50;
      motor[insideLM]  = 50;
      motor[insideRM]  = 50;
      motor[outsideLM]  = 50;
      motor[outsideRM] = 50;
    }
  }
}
      //END OF ZOOP-RESIST CODE
	
//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++\\
